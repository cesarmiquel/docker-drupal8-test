#!/usr/bin/env python

import os
import argparse
import platform

# @TODO Remove ugly global
debug = True
rootfs = None

# Helper class for colors
class bgcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'

# PS command ----------------------------------------------------------------------------
def cmd_ps():
    exec_cmd('docker ps -a')

# Up command ----------------------------------------------------------------------------
def cmd_up():
    # Launch data container
    cmd = 'docker-compose up -d web'
    exec_cmd(cmd)

# Down command ----------------------------------------------------------------------------
def cmd_down():
    cmd = 'docker-compose down'
    exec_cmd(cmd)

# Build command ----------------------------------------------------------------------------
def cmd_build():
    cmd = 'docker-compose build'
    exec_cmd(cmd)
        
#def cmd_composer(args):

def cmd_drush(args):
    args_string = ' '.join([str(i) for i in args])
    cmd = 'docker-compose run --rm drush '
    cmd += args_string
    exec_cmd(cmd)

def cmd_console(args):
    args_string = ' '.join([str(i) for i in args])
    cmd = 'docker-compose run --rm console '
    cmd += args_string
    exec_cmd(cmd)


# Helpers  ---------------------------------------------------------------------
def exec_cmd(cmd):
    if debug:
        print("Executing [" + bgcolors.OKGREEN + cmd + bgcolors.ENDC + "]")
    os.system(cmd)

# ------------------------------------------------------------------------------
# Main entry point
# ------------------------------------------------------------------------------
if __name__ == "__main__":

    # Parse args
    parser = argparse.ArgumentParser(prog = 'd4d')
    parser.add_argument('command', nargs=1, choices=['up', 'down', 'build', 'ps', 'composer', 'drush', 'console'], help='Command to execute.')
    parser.add_argument('args', nargs='*', help='Additiona alrguments')
    args = parser.parse_args()

    # Setup global path
    rootfs = os.getcwd()

    # Process commands
    if args.command[0] == 'up':
        cmd_up()
    elif args.command[0] == 'down':
        cmd_down()
    elif args.command[0] == 'build':
        cmd_build()
    elif args.command[0] == 'ps':
        cmd_ps()
    elif args.command[0] == 'composer':
        cmd_composer(args.args)
    elif args.command[0] == 'drush':
        cmd_drush(args.args)
    elif args.command[0] == 'console':
        cmd_console(args.args)

